{
  "openapi": "3.0.0",
  "info": {
    "title": "TodoTask, Tours, and Users API",
    "version": "1.0.0",
    "description": "API for managing users, tours, and todo tasks."
  },
  "servers": [
    {
      "url": "http://localhost:5001/api"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "Tour": {
        "type": "object",
        "required": ["name", "info", "image", "price"],
        "properties": {
          "name": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "price": {
            "type": "string"
          }
        }
      },
      "TodoTask": {
        "type": "object",
        "required": ["title", "description", "dueDate", "completed"],
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "completed": {
            "type": "boolean"
          },
          "user_id": {
            "type": "string",
            "description": "Reference to the User ID"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/tours": {
      "get": {
        "tags": ["Tours"],
        "summary": "Get all tours",
        "responses": {
          "200": {
            "description": "A list of tours",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tour"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tours"],
        "summary": "Create a new tour",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tour"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tour successfully created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/tours/{tourId}": {
      "get": {
        "tags": ["Tours"],
        "summary": "Get a tour by ID",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tour found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "404": {
            "description": "Tour not found"
          }
        }
      },
      "put": {
        "tags": ["Tours"],
        "summary": "Update a tour by ID",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tour"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tour updated"
          },
          "404": {
            "description": "Tour not found"
          }
        }
      },
      "delete": {
        "tags": ["Tours"],
        "summary": "Delete a tour by ID",
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tour deleted successfully"
          },
          "404": {
            "description": "Tour not found"
          }
        }
      }
    },
    "/todoTasks": {
      "get": {
        "tags": ["Todo Tasks"],
        "summary": "Get all TodoTasks for a user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of TodoTasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoTask"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Todo Tasks"],
        "summary": "Create a new TodoTask",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTask"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "TodoTask successfully created"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/todoTasks/{id}": {
      "get": {
        "tags": ["Todo Tasks"],
        "summary": "Get a TodoTask by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "TodoTask found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "404": {
            "description": "TodoTask not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["Todo Tasks"],
        "summary": "Update a TodoTask by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TodoTask updated"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Todo Tasks"],
        "summary": "Delete a TodoTask by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "TodoTask deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
